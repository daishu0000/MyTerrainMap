# -*- coding: utf-8 -*-
"""
/***************************************************************************
 MyTerrainMapDialog
                                 A QGIS plugin
 Create Terrain Map
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2025-01-13
        git sha              : $Format:%H$
        copyright            : (C) 2025 by daishu
        email                : daishu10000@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
import json
import osmium
from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from qgis.core import (
    QgsVectorLayer,
    QgsDataSourceUri,
    QgsProject
)
from PyQt5.QtWidgets import QMessageBox


import requests
# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'MyTerrainMap_dialog_base.ui'))


class MyTerrainMapDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(MyTerrainMapDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
        self.pbGet.clicked.connect(self.onPbGetClicked)

    def onPbGetClicked(self):
        # apiKey=self.edAPIKey.text()
        name=self.edName.text()

        # 验证输入
        if not name.strip():
            print("请输入有效的地名")
            return

        # Overpass API 查询
        query = f"""
        [out:json];
        (
          relation["name"="{name}"]["admin_level"=8];
        );
        out body;
        >;
        out skel qt;
        """
        url = "https://overpass-api.de/api/interpreter"
        try:
            print("正在下载数据...")
            response = requests.post(url, data={"data": query})
            response.raise_for_status()  # 检查 HTTP 错误

            # 将返回的 JSON 加载为 QGIS 图层
            osm_json = json.loads(response.text)



        except requests.exceptions.RequestException as e:
            print(f"下载失败: {e}")

        return


